#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Feb 25 09:59:25 2018
Multiple Linear Regresssion
@author: garren
"""

#Importing the libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
#import sklearn.preprocessing.imputation as imp
#import sklearn.preprocessing.label as lab

#Import dataset using Pandas
dataset = pd.read_csv('50_Startups.csv') #placed project py file in same directory as Data.csv to avoid fully qualified directory path


X=dataset.iloc[:, :-1].values #independent variables - given data columns
y=dataset.iloc[:, 4].values  #dependend variables-predicted data column

# Encoding categorical data
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_X = LabelEncoder()
X[:, 3] = labelencoder_X.fit_transform(X[:, 3])
onehotencoder = OneHotEncoder(categorical_features = [3])
X = onehotencoder.fit_transform(X).toarray()

#Avoiding the dummy variable trap
X = X[:, 1:]

#Splitting training and test data sets
from sklearn.cross_validation import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.2, random_state=0) #split 20% test/80% train


#Fitting Multiple Linear Regression to training set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression() 
regressor.fit(X_train, y_train) 

#Predicting the Test set results
y_pred = regressor.predict(X_test)


#backward elimination
import statsmodels.formula.api as sm
X = np.append(arr=np.ones((50,1)).astype(int),values=X, axis=1) #prefixing dataset with array of 1's (req by stats fx)

X_opt = X[:,[0,1,2,3,4,5]]  #X_opt initialized with original matrix of features (independent variables)
#Select a SL (significant level) - in this case SL=0.05

#Need a new regressor (Ordinary Least Squares: stats method for estimating unknown parameters in linear regression models)
regressor_OLS=sm.OLS(endog=y, exog=X_opt).fit() #fit with all possible predictors


regressor_OLS.summary() #Indicates which predictor (P) value should be eliminated. in this case it is [2] b/c it has highes P value of .990 (gretrer than SL of .05)
'''
                            OLS Regression Results                            
==============================================================================
Dep. Variable:                      y   R-squared:                       0.951
Model:                            OLS   Adj. R-squared:                  0.945
Method:                 Least Squares   F-statistic:                     169.9
Date:                Sun, 25 Feb 2018   Prob (F-statistic):           1.34e-27
Time:                        10:46:29   Log-Likelihood:                -525.38
No. Observations:                  50   AIC:                             1063.
Df Residuals:                      44   BIC:                             1074.
Df Model:                           5                                         
Covariance Type:            nonrobust                                         
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
const       5.013e+04   6884.820      7.281      0.000    3.62e+04     6.4e+04
x1           198.7888   3371.007      0.059      0.953   -6595.030    6992.607
x2           -41.8870   3256.039     -0.013      0.990   -6604.003    6520.229
x3             0.8060      0.046     17.369      0.000       0.712       0.900
x4            -0.0270      0.052     -0.517      0.608      -0.132       0.078
x5             0.0270      0.017      1.574      0.123      -0.008       0.062
==============================================================================
Omnibus:                       14.782   Durbin-Watson:                   1.283
Prob(Omnibus):                  0.001   Jarque-Bera (JB):               21.266
Skew:                          -0.948   Prob(JB):                     2.41e-05
Kurtosis:                       5.572   Cond. No.                     1.45e+06
==============================================================================
'''

X_opt = X[:,[0,1,3,4,5]]  # Reset X_opt after removing the predictor (with least statistical significance), then refit 
regressor_OLS=sm.OLS(endog=y, exog=X_opt).fit() #fit with all possible predictors
regressor_OLS.summary()
'''
                            OLS Regression Results                                                               
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
const       5.011e+04   6647.870      7.537      0.000    3.67e+04    6.35e+04
x1           220.1585   2900.536      0.076      0.940   -5621.821    6062.138
x2             0.8060      0.046     17.606      0.000       0.714       0.898
x3            -0.0270      0.052     -0.523      0.604      -0.131       0.077
x4             0.0270      0.017      1.592      0.118      -0.007       0.061
==============================================================================

'''
X_opt = X[:,[0,3,4,5]]  # Reset X_opt after removing the predictor (with least statistical significance), then refit 
regressor_OLS=sm.OLS(endog=y, exog=X_opt).fit() #fit with all possible predictors
regressor_OLS.summary()

'''
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
const       5.012e+04   6572.353      7.626      0.000    3.69e+04    6.34e+04
x1             0.8057      0.045     17.846      0.000       0.715       0.897
x2            -0.0268      0.051     -0.526      0.602      -0.130       0.076
x3             0.0272      0.016      1.655      0.105      -0.006       0.060
==============================================================================
'''

X_opt = X[:,[0,3,5]]  # Reset X_opt after removing the predictor (with least statistical significance), then refit 
regressor_OLS=sm.OLS(endog=y, exog=X_opt).fit() #fit with all possible predictors
regressor_OLS.summary()
'''
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
const       4.698e+04   2689.933     17.464      0.000    4.16e+04    5.24e+04
x1             0.7966      0.041     19.266      0.000       0.713       0.880
x2             0.0299      0.016      1.927      0.060      -0.001       0.061
============================================================================== 
'''
X_opt = X[:,[0,3]]  # Reset X_opt after removing the predictor (with least statistical significance), then refit 
regressor_OLS=sm.OLS(endog=y, exog=X_opt).fit() #fit with all possible predictors
regressor_OLS.summary()
'''
All P values with > .05 (SL) have now been removed.  The model predicts based on the "R&D Spend" data only


                            OLS Regression Results                            
==============================================================================
Dep. Variable:                      y   R-squared:                       0.947
Model:                            OLS   Adj. R-squared:                  0.945
Method:                 Least Squares   F-statistic:                     849.8
Date:                Sun, 25 Feb 2018   Prob (F-statistic):           3.50e-32
Time:                        11:19:14   Log-Likelihood:                -527.44
No. Observations:                  50   AIC:                             1059.
Df Residuals:                      48   BIC:                             1063.
Df Model:                           1                                         
Covariance Type:            nonrobust                                         
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
const       4.903e+04   2537.897     19.320      0.000    4.39e+04    5.41e+04
x1             0.8543      0.029     29.151      0.000       0.795       0.913
==============================================================================
Omnibus:                       13.727   Durbin-Watson:                   1.116
Prob(Omnibus):                  0.001   Jarque-Bera (JB):               18.536
Skew:                          -0.911   Prob(JB):                     9.44e-05
Kurtosis:                       5.361   Cond. No.                     1.65e+05
==============================================================================
'''
